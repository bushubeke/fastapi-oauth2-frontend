/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LoginUserModel model module.
 * @module model/LoginUserModel
 * @version 0.1.0
 */
class LoginUserModel {
    /**
     * Constructs a new <code>LoginUserModel</code>.
     * @alias module:model/LoginUserModel
     * @param username {String} 
     * @param password {String} 
     */
    constructor(username, password) { 
        
        LoginUserModel.initialize(this, username, password);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, username, password) { 
        obj['username'] = username;
        obj['password'] = password;
    }

    /**
     * Constructs a <code>LoginUserModel</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LoginUserModel} obj Optional instance to populate.
     * @return {module:model/LoginUserModel} The populated <code>LoginUserModel</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LoginUserModel();

            if (data.hasOwnProperty('grant_type')) {
                obj['grant_type'] = ApiClient.convertToType(data['grant_type'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/LoginUserModel.GrantTypeEnum} grant_type
 * @default 'authorization_code'
 */
LoginUserModel.prototype['grant_type'] = 'authorization_code';

/**
 * @member {String} username
 */
LoginUserModel.prototype['username'] = undefined;

/**
 * @member {String} password
 */
LoginUserModel.prototype['password'] = undefined;

/**
 * @member {String} token
 * @default 'none'
 */
LoginUserModel.prototype['token'] = 'none';





/**
 * Allowed values for the <code>grant_type</code> property.
 * @enum {String}
 * @readonly
 */
LoginUserModel['GrantTypeEnum'] = {

    /**
     * value: "password"
     * @const
     */
    "password": "password",

    /**
     * value: "authorization_code"
     * @const
     */
    "authorization_code": "authorization_code",

    /**
     * value: "refresh_token"
     * @const
     */
    "refresh_token": "refresh_token",

    /**
     * value: "token_decode"
     * @const
     */
    "token_decode": "token_decode"
};



export default LoginUserModel;

